[{"/Users/clairepuckett/Desktop/Homework/portfolio-react/src/index.js":"1","/Users/clairepuckett/Desktop/Homework/portfolio-react/src/App.js":"2","/Users/clairepuckett/Desktop/Homework/portfolio-react/src/reportWebVitals.js":"3","/Users/clairepuckett/Desktop/Homework/portfolio-react/src/components/Nav/index.js":"4","/Users/clairepuckett/Desktop/Homework/portfolio-react/src/components/Footer/index.js":"5","/Users/clairepuckett/Desktop/Homework/portfolio-react/src/components/Project/index.js":"6","/Users/clairepuckett/Desktop/Homework/portfolio-react/src/components/Header/index.js":"7","/Users/clairepuckett/Desktop/Homework/portfolio-react/src/components/About/index.js":"8","/Users/clairepuckett/Desktop/Homework/portfolio-react/src/components/Contact/index.js":"9","/Users/clairepuckett/Desktop/Homework/portfolio-react/src/components/Resume/index.js":"10","/Users/clairepuckett/Desktop/Homework/portfolio-react/src/components/index.js":"11"},{"size":500,"mtime":1608587035205,"results":"12","hashOfConfig":"13"},{"size":980,"mtime":1608672743165,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1608587035207,"results":"15","hashOfConfig":"13"},{"size":1396,"mtime":1611979023295,"results":"16","hashOfConfig":"13"},{"size":992,"mtime":1611982371301,"results":"17","hashOfConfig":"13"},{"size":5045,"mtime":1611989185924,"results":"18","hashOfConfig":"13"},{"size":0,"mtime":1608592254875,"results":"19","hashOfConfig":"13"},{"size":1051,"mtime":1608662753957,"results":"20","hashOfConfig":"13"},{"size":2956,"mtime":1611987111332,"results":"21","hashOfConfig":"13"},{"size":1428,"mtime":1611983505828,"results":"22","hashOfConfig":"13"},{"size":273,"mtime":1608672608855,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"x4wh53",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/clairepuckett/Desktop/Homework/portfolio-react/src/index.js",[],["51","52"],"/Users/clairepuckett/Desktop/Homework/portfolio-react/src/App.js",["53"],"import { React, useState } from \"react\";\nimport './App.css';\nimport {Nav, Footer, Project, Header, About, Contact, Resume} from './components'\n\nfunction App() {\n\n  //nav tabs \n  const [navSelect] = useState([\n    {\n      title: \"About Me\",\n    },\n    {\n      title: \"Portfolio\",\n    },\n    {\n      title: \"Resume\"\n    },\n    {\n      title: \"Contact\"\n    }\n  ])\n\n  //set default to 'about me'\n  const [currentNavSelect, setCurrentNavSelect] = useState(navSelect[0].title);\n\n  return (\n    <>\n      <Nav\n        navSelect={navSelect}\n        setCurrentNavSelect={setCurrentNavSelect}\n        currentNavSelect={currentNavSelect}\n      />\n      {/* conditionally render navigation */}\n      {currentNavSelect===\"Portfolio\" ? (\n      <Project />\n      ):  currentNavSelect===\"Contact\" ? (\n        <Contact></Contact>\n      ): currentNavSelect===\"Resume\" ? (\n        <Resume></Resume>\n      )\n      :\n      (<About></About>)\n      }\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","/Users/clairepuckett/Desktop/Homework/portfolio-react/src/reportWebVitals.js",[],"/Users/clairepuckett/Desktop/Homework/portfolio-react/src/components/Nav/index.js",[],"/Users/clairepuckett/Desktop/Homework/portfolio-react/src/components/Footer/index.js",["54","55","56"],"import React from \"react\";\n\nfunction Footer() {\n    return (\n        <footer>\n            <div className=\"navbar sticky-bottom navbar-light bg-light justify-content-center\">\n                <ul><a className=\"footer-link\" href=\"https://github.com/itsclairehi\" target=\"_blank\" >\n                    github\n                    </a></ul>\n                <ul> <a className=\"footer-link\" href=\"https://www.linkedin.com/in/claire-puckett-26044b27/\" target=\"_blank\">\n                    linkedin\n                    </a></ul>\n                <ul> <a className=\"footer-link\" href=\"https://www.instagram.com/bearpuckett/\" target=\"_blank\">\n                    instagram\n                    </a></ul>\n            </div>\n            <div>\n                <div className=\"navbar sticky-bottom navbar-light bg-light justify-content-center\">\n                    <p className=\"navbar-brand\">Claire Puckett Â© 2021</p>\n                </div>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer;","/Users/clairepuckett/Desktop/Homework/portfolio-react/src/components/Project/index.js",["57"],"import React, { useState } from \"react\";\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid'\nimport {CardMedia} from \"@material-ui/core\";\n// import CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nfunction Project() {\n    const useStyles = makeStyles({\n        root: {\n            maxWidth: 345,\n        },\n    });\n    const classes = useStyles();\n\n    const [projects] = useState([\n        {\n            title: \"Fairstreem\",\n            description: \"a social site for musicians and listeners to connect through music and conversation, with the ability to create profiles and buy songs\",\n            href: \"https://fairstreem.herokuapp.com/\",\n            imgFileName: \"fairstreem.png\",\n            github: \"https://github.com/Team-Dreem/fairstreem-mern\"\n        },\n        {\n            title: \"Mixr\",\n            description: \"project management app for musicians\",\n            href: \"https://afternoon-reef-59917.herokuapp.com/\",\n            imgFileName: \"mixr-2.jpg\",\n            github: \"https://github.com/redteam5/mixer\"\n\n        },\n        {\n            title: \"run buddy\",\n            description: \"whatever\",\n            href: \"https://www.google.com\",\n            imgFileName: \"kitty.jpg\"\n        },\n        {\n            title: \"Citizen Portal\",\n            description: \"Get to know your representatives!\",\n            href: \"https://teamgreeenlantern.github.io/citizen-portal/index.html\",\n            imgFileName: \"citizen-portal.jpg\",\n            github: \"https://github.com/TeamGreeenLantern/citizen-portal\"\n        },\n        {\n            title: \"deep thoughts\",\n            description: \"a social forum page that allows users to comment, reply, and friend each other\",\n            href: \"https://itsclairehi.github.io/deep-thoughts/\",\n            imgFileName: \"kitty.jpg\",\n            github: \"https://github.com/itsclairehi/deep-thoughts\"\n        },\n        {\n            title: \"Weather Dashboard\",\n            description: \"a handy weather app for all your curiosities of sun and wind!\",\n            href: \"https://itsclairehi.github.io/weather-dashboard/\",\n            imgFileName: \"weather.png\",\n            github: \"https://github.com/itsclairehi/weather-dashboard\"\n        }\n\n\n    ])\n    //when project element is clicked it goes to the deployed site\n    function goToDeploy(href) {\n        window.location.href = href\n    }\n\n\n    return (\n        <Grid container spacing={6}>\n            {projects.map((project, i) => (\n                <Grid item component={Card} xs={12} sm={6} md={4} className=\"content\">\n                    <CardMedia\n                        component=\"img\"\n                        alt={project.title}\n                        image={require(`../../assets/project-images/${project.imgFileName}`).default}\n                        height=\"140\"\n                        className=\"img-thumbnail mx-1\"\n                        onClick={() => goToDeploy(project.href)}\n                        key={project.title}\n                    />\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            {project.title}\n                         </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            {project.description}\n                        </Typography>\n                    </CardContent>\n\n                    <CardActions>\n                        <Button \n                        size=\"small\" \n                        color=\"primary\"\n                        onClick={() => goToDeploy(project.href)}\n                        >\n                            Deployed App\n                        </Button>\n                        <Button size=\"small\" color=\"primary\">\n                            <a href={project.github}>\n                            Github Repo\n                            </a>\n                        </Button>\n                        </CardActions>\n                </Grid>\n            ))}\n\n                </Grid>\n\n            )      \n}\n\nexport default Project;\n\n   // {/* <div className= \"row\"> */}\n        //   {/* produce a grid of all projects */}\n\n        //         {/* {projects.map((project, i)=> (\n        //             <div className=\"project col-sm col-md-6\">\n        //               <img\n        //               src={require(`../../assets/project-images/${project.imgFileName}.jpg`).default}\n        //               alt={project.title}\n        //               className = \"img-thumbnail mx-1\"\n        //               onClick={()=>goToDeploy(project.href)}\n        //               key={project.title}\n        //             />\n        //             </div>\n\n        //         ))}\n\n        //     </div> */}","/Users/clairepuckett/Desktop/Homework/portfolio-react/src/components/Header/index.js",[],"/Users/clairepuckett/Desktop/Homework/portfolio-react/src/components/About/index.js",[],"/Users/clairepuckett/Desktop/Homework/portfolio-react/src/components/Contact/index.js",["58","59","60","61"],"import React, { useState } from 'react';\nimport { FormControl, InputLabel, Select, TextField, Button, Grid, Paper } from \"@material-ui/core\";\n\nfunction Contact() {\n    //set state to values of all 3 form elements, update on each blur\n    const [formState, setFormState] = useState({\n        name: '',\n        email: '',\n        message: ''\n    })\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n\n        setFormState({\n            ...formState,\n            [name]: value,\n        });\n\n    };\n\n    //initialize error message as empty string\n    const [errorMessage, setErrorMessage] = useState('');\n\n    function validateInput(e) {\n        //user input\n        console.log(e.target.value);\n        console.log(e.target.name);\n        // setFormValues(...formValues, e.target.name: e.target.value)\n\n\n        if (e.target.value === '') {\n            e.target.placeholder = \"must provide value\"\n            setErrorMessage(`${e.target.name} is required.`)\n\n        } else {\n            setErrorMessage('')\n        }\n    }\n\n\n    function formHandler() {\n        console.log(\"Successss\");\n\n    }\n\n    return (\n        <Grid container className=\"justify-content-center contact-form\">\n            \n            <Grid item xs={12} sm={6} component={FormControl} onSubmit={formHandler}  >\n\n             \n                <TextField\n                        className=\"input\"\n                        required id=\"standard-required\"\n                        label=\"Name\"\n                        \n                        margin=\"normal\"\n                        name=\"name\"\n                        type=\"input\"\n                        onBlur={validateInput}\n                        onChange={handleChange}\n                    />\n                    <TextField\n                        className=\"input\"\n                        required id=\"standard-required\"\n                        label=\"Email Address\"\n                        \n                        margin=\"normal\"\n                        name=\"email\"\n                        type=\"email\"\n                        onBlur={validateInput}\n                        onChange={handleChange}\n                    />\n                     <TextField\n                    \n                    label=\"Message\"\n                    multiline\n                    rows={5}\n                    fullWidth={true}\n                    variant=\"outlined\"\n                    placeholder=\"message\"\n                    name=\"message\"\n                    onBlur={validateInput}\n                    onChange={handleChange}\n                />\n                    {errorMessage && (\n                        <div>\n                            <p className=\"error-text\">{errorMessage}</p>\n                        </div>\n                    )}\n                    <button className=\"btn btn-secondary\" type=\"submit\">Submit</button>\n                </ Grid>\n            \n        </Grid>\n    )\n}\n\nexport default Contact","/Users/clairepuckett/Desktop/Homework/portfolio-react/src/components/Resume/index.js",[],"/Users/clairepuckett/Desktop/Homework/portfolio-react/src/components/index.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":3,"column":31,"nodeType":"68","messageId":"69","endLine":3,"endColumn":37},{"ruleId":"70","severity":1,"message":"71","line":7,"column":86,"nodeType":"72","endLine":7,"endColumn":101},{"ruleId":"70","severity":1,"message":"71","line":10,"column":109,"nodeType":"72","endLine":10,"endColumn":124},{"ruleId":"70","severity":1,"message":"71","line":13,"column":95,"nodeType":"72","endLine":13,"endColumn":110},{"ruleId":"66","severity":1,"message":"73","line":19,"column":11,"nodeType":"68","messageId":"69","endLine":19,"endColumn":18},{"ruleId":"66","severity":1,"message":"74","line":2,"column":23,"nodeType":"68","messageId":"69","endLine":2,"endColumn":33},{"ruleId":"66","severity":1,"message":"75","line":2,"column":35,"nodeType":"68","messageId":"69","endLine":2,"endColumn":41},{"ruleId":"66","severity":1,"message":"76","line":2,"column":54,"nodeType":"68","messageId":"69","endLine":2,"endColumn":60},{"ruleId":"66","severity":1,"message":"77","line":2,"column":68,"nodeType":"68","messageId":"69","endLine":2,"endColumn":73},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'classes' is assigned a value but never used.","'InputLabel' is defined but never used.","'Select' is defined but never used.","'Button' is defined but never used.","'Paper' is defined but never used.","no-global-assign","no-unsafe-negation"]